name: iOS CI/CD with Tuist

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/ios/**'
      - '.github/workflows/ios-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/ios/**'

env:
  TUIST_VERSION: 4.65.4
  XCODE_VERSION: 15.4

jobs:
  build-and-test:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
    
    - name: Install Tuist
      run: |
        curl -Ls https://install.tuist.io | bash
        tuist version
    
    - name: Cache Tuist dependencies
      uses: actions/cache@v4
      with:
        path: |
          apps/ios/Tuist/.build
          apps/ios/.tuist-cache
        key: ${{ runner.os }}-tuist-${{ hashFiles('apps/ios/Tuist/Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-tuist-
    
    - name: Fetch dependencies
      working-directory: apps/ios
      run: |
        tuist install
    
    - name: Generate Xcode project
      working-directory: apps/ios
      run: |
        tuist generate
    
    - name: Build
      working-directory: apps/ios
      run: |
        xcodebuild build \
          -workspace ClaudeCode.xcworkspace \
          -scheme ClaudeCode \
          -configuration Debug \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Run tests
      working-directory: apps/ios
      run: |
        xcodebuild test \
          -workspace ClaudeCode.xcworkspace \
          -scheme ClaudeCode \
          -configuration Debug \
          -destination "platform=iOS Simulator,name=iPhone 15 Pro" \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          apps/ios/build/Logs/Test/*.xcresult
    
    - name: Upload code coverage
      if: success()
      uses: codecov/codecov-action@v4
      with:
        directory: apps/ios/build/Logs/Test/
        flags: ios
        name: ios-coverage
        fail_ci_if_error: false

  lint:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      working-directory: apps/ios
      run: swiftlint lint --reporter github-actions-logging